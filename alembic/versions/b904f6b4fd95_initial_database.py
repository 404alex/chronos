"""Initial database

Revision ID: b904f6b4fd95
Revises: 
Create Date: 2020-05-17 21:31:17.076678

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.engine.reflection import Inspector


# revision identifiers, used by Alembic.
revision = "b904f6b4fd95"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    conn = op.get_bind()
    inspector = Inspector.from_engine(conn)
    tables = inspector.get_table_names()

    if "scripts" not in tables:
        op.create_table(
            "scripts",
            sa.Column("name", sa.String(), nullable=True),
            sa.Column("uid", sa.String(), nullable=False),
            sa.Column("enabled", sa.Boolean(), nullable=True),
            sa.Column("triggers", sa.JSON(), nullable=True),
            sa.PrimaryKeyConstraint("uid"),
        )

    if "settings" not in tables:
        op.create_table(
            "settings",
            sa.Column("key", sa.String(), nullable=False),
            sa.Column("value", sa.String(), nullable=True),
            sa.PrimaryKeyConstraint("key"),
        )

    if "tasks" not in tables:
        op.create_table(
            "tasks",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("task_id", sa.String(), nullable=True),
            sa.Column("task_arguments", sa.String(), nullable=True),
            sa.Column("priority", sa.String(), nullable=True),
            sa.Column("status", sa.String(), nullable=True),
            sa.Column("output", sa.String(), nullable=True),
            sa.Column("time_scheduled", sa.DateTime(), nullable=True),
            sa.Column("time_started", sa.DateTime(), nullable=True),
            sa.Column("time_finished", sa.DateTime(), nullable=True),
            sa.PrimaryKeyConstraint("id"),
        )

    if "logs" not in tables:
        op.create_table(
            "logs",
            sa.Column("id", sa.Integer(), nullable=False),
            sa.Column("script", sa.Integer(), nullable=True),
            sa.Column("text", sa.String(), nullable=True),
            sa.Column("error", sa.String(), nullable=True),
            sa.Column("date", sa.DateTime(), nullable=True),
            sa.Column("exitcode", sa.Integer(), nullable=True),
            sa.ForeignKeyConstraint(["script"], ["scripts.uid"],),
            sa.PrimaryKeyConstraint("id"),
        )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("logs")
    op.drop_table("tasks")
    op.drop_table("settings")
    op.drop_table("scripts")
    # ### end Alembic commands ###
